import collections
import json
import os
import re

import regex
import tqdm

meanings = {
    '–≤–æ–ª–æ–¥–∏–º–∏—Ä–∑–µ–ª–µ–Ω—Å—å–∫–∏–π': "Ukrainian for 'Volodymr Zelensky'",
    '—Å–ª–∞–≤–∞—É–∫—Ä–∞—ó–Ω—ñ': "Ukrainian for: 'Glory to Ukraine'",
    '–ø—É—Ç—ñ–Ω—Ö—É–π–ª–æ': "Ukrainian for 'Putin sucks'",
    '—Ä–µ–∫': "Ukrainian for 'Recommended'",
    '—É–∫—Ä–∞—ó–Ω–∞': "Ukrainian for 'Ukraine'",
    '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏': "Ukrainian for 'Recommendations'",
    '—Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó': "Ukrainian for 'Recommendations'",
    '—Ä–æ—Å—Å–∏—è': "Ukrainian for 'Russia'",
    '—É–∫—Ä–∞–∏–Ω–∞': "Ukrainian for 'Ukraine'",
    '–£–∫—Ä–∞—ó–Ω–∞': "ukrainian for 'Ukraine'",
    '–≤—ñ–π–Ω–∞–≤—É–∫—Ä–∞—ó–Ω—ñ': "Ukrainian for 'War in Ukraine'",
    '–∑–µ–ª–µ–Ω—Å—å–∫–∏–π': "Ukrainian for 'Zelensky'",
    '—Ö–æ—á—É–≤—Ä–µ–∫': "Ukrainian for 'I want recommends'?",
    '–Ω—ñ–≤—ñ–π–Ω—ñ': "Ukrainian for 'Non-existent'?",
    '–≤—ñ–π–Ω–∞': "Ukrainian for 'War'",
    '–≤—ñ–π–Ω–∞2022': "Ukrainian for 'War2022'",
    '—É–∫—Ä–∞—ó–Ω—Å—å–∫–∏–π—Ç—ñ–∫—Ç–æ–∫': "Ukrainian for 'Ukrainian TikTok'",
    '–ø—Ä–µ–∑–∏–¥–µ–Ω—Ç': "Ukrainian for 'President'",
    '–≤—ñ–π–Ω–∞—Ç—Ä–∏–≤–∞—î': "Ukrainian for 'The War Continues'",
    '—É–∫—Ä–∞—ó–Ω–∞–ø–µ—Ä–µ–º–æ–∂–µ': "Ukrainian for 'Ukraine will win'",
    '–∫–∏—ó–≤': "Ukrainian for 'Kyiv'",
    '–º–∞–∫—Ä–æ–Ω': "Ukrainian for 'Macron'",
    '–ø–æ—Ä–æ—à–µ–Ω–∫–æ': "Ukrainian for 'Poroshenko', ex-Prime Minister of Ukraine",
    '–µ–≤—Ä–æ–ø–∞': "Ukrainian for 'Europe'",

    '–Ω–µ—Ç–≤–æ–π–Ω–µ': "Russian for 'No war'",
    '—Ç—Ä–µ–Ω–¥—ã': "Russian for 'Trends'",
    '–∑–µ–ª–µ–Ω—Å–∫–∏–π': "Russian for 'Zelensky'",
    '–ø—É—Ç–∏–Ω—Ö—É–π–ª–æ': "Russian for 'Putin Sucks'",
    '–≥–µ—Ä–æ—è–º—Å–ª–∞–≤–∞': "Russian for 'Glory to the Heroes'",
    '—é–º–æ—Ä': "Russian for 'Funny'",
    '–ø–æ–ª–∏—Ç–∏–∫–∞': "Russian for 'Politics'",
    '–º–∏—Ä': "Russian for 'World' or 'Peace'",
    '–ø–µ—Ä–µ–ø–∏—Å–∫–∞': "Russian for 'Correspondence'",
    '–†–æ—Å—Å–∏—è': "Russian for 'Russia'",
    '–∑–µ': "Russian for 'Ze', Short name for Zelensky?",
    '—Å—à–∞': "Russian for 'USA'",
    '–≤–ª–∞–¥–∏–º–∏—Ä–∑–µ–ª–µ–Ω—Å–∫–∏–π': "Russian for 'Vladimir Zelensky'",
    '–ù–ê–¢–û': "Russian for 'NATO'",
    '–¥–æ–Ω–±–∞—Å—Å': "Russian for 'Donbass'",

    'rusia': "Spanish for 'Russia'",
    'parati': "Spanish for 'For You'",
    'ucrania': "Spanish for 'Ukraine'",
    'guerra': "Spanish for 'War'",

    'ucraina': "Romanian for 'Ukraine'",
    
    '–ø—É—Ç–∏–Ω': "Macedonian for 'Putin'",
    '–º–æ—Å–∫–≤–∞': "Macedonian for 'Moscow'",

    '—É–∫—Ä–∞—ó–Ω–∞–ø–æ–Ω–∞–¥—É—Å–µ': "Ukraine above all",
    'ukraina': "Estonian for 'Ukrainian'",
    'perte': "French for 'loss'",
    'f√ºrdich': "German for 'For You'",
    
    'rosja': "Polish for 'Russia'",
    'dlaciebie': "Polish for 'For You'",
    'polska': "Polish for 'Poland'",

    '–≤—Å–µ–±—É–¥–µ—É–∫—Ä–∞—ó–Ω–∞': "All of Ukraine",
    'ke≈üfet': "Turkish for 'Discover'",
    
    '–≤–æ–π–Ω–∞': "Bulgarian for 'War'",

    'xyzbca': "Common TikTok hashtag that means nothing",
    '–∑—Å—É': "Armed forces of Ukraine",
    'CapCut': "Video Editor",
}

def main():

    #hashtags = ['ukraine', 'standwithukraine', 'russia', 'nato', 'putin', 'moscow', 'zelenskyy', 'stopwar', 'stopthewar', 'ukrainewar', 'ww3']
    #hashtags = ['–≤–æ–ª–æ–¥–∏–º–∏—Ä–∑–µ–ª–µ–Ω—Å—å–∫–∏–π', '—Å–ª–∞–≤–∞—É–∫—Ä–∞—ó–Ω—ñ', '–ø—É—Ç—ñ–Ω—Ö—É–π–ª–æüî¥‚ö´üá∫üá¶', '—Ä–æ—Å—Å–∏—è', 
    #'–≤—ñ–π–Ω–∞–≤—É–∫—Ä–∞—ó–Ω—ñ', '–∑–µ–ª–µ–Ω—Å—å–∫–∏–π', '–Ω—ñ–≤—ñ–π–Ω—ñ', '–≤—ñ–π–Ω–∞', '–Ω–µ—Ç–≤–æ–π–Ω–µ', '–∑–µ–ª–µ–Ω—Å–∫–∏–π', '–ø—É—Ç–∏–Ω—Ö—É–π–ª–æ']
    #hashtags = ['denazification', 'specialmilitaryoperation', 'africansinukraine', 'putinspeech', 'whatshappeninginukraine']

    this_dir_path = os.path.dirname(os.path.abspath(__file__))
    data_dir_path = os.path.join(this_dir_path, '..', '..', 'data')
    
    hashtag_dir_path = os.path.join(data_dir_path, 'hashtags')
    searches_dir_path = os.path.join(data_dir_path, 'searches')
    file_paths = [os.path.join(hashtag_dir_path, file_name) for file_name in os.listdir(hashtag_dir_path)] \
               + [os.path.join(searches_dir_path, file_name) for file_name in os.listdir(searches_dir_path)]

    videos = []
    for file_path in file_paths:
        with open(file_path, 'r') as f:
            video_data = json.load(f)

        videos += video_data

    all_desc_hashtags = [[challenge['title'] for challenge in video.get('challenges', [])] for video in videos]
    hashtags = [hashtag for desc_hashtag in all_desc_hashtags for hashtag in desc_hashtag]

    cnt = collections.Counter(hashtags)

    common_hashtags = cnt.most_common(1000)

    #russian_translator = Translator(from_lang='uk', to_lang='en')
    #ukrainian_translator = Translator(from_lang='ru', to_lang='en')

    translated_hashtags = []
    for hashtag_count in tqdm.tqdm(common_hashtags):
        hashtag, count = hashtag_count
        word = hashtag
        meaning = ''

        if word in meanings:
            meaning += f"{meanings[word]}"

        #elif regex.search(r'\p{IsCyrillic}', word):
            #meaning += f", Ukrainian: {ukrainian_translator.translate(word)}"
            #meaning += f", Russian: {russian_translator.translate(word)}"

        translated_hashtags.append({
            'word': word,
            'meaning': meaning,
            'count': count
        })

    this_file_dir = os.path.dirname(os.path.abspath(__file__))
    data_dir = os.path.join(this_file_dir, '..', '..', 'data', 'outputs')
    hashtag_file = os.path.join(data_dir, 'all_common_hashtags.json')

    with open(hashtag_file, 'w') as f:
        json.dump(translated_hashtags, f, indent=4, ensure_ascii=False)


if __name__ == '__main__':
    main()